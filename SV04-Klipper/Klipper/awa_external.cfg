[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

# Based on Ellis macro, but adapted for Idex
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    {% set tool  = params.T|default(0)|int %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
      {% if tool == 1 %}
        TEMPERATURE_WAIT SENSOR=extruder1 MINIMUM={s-1} MAXIMUM={s+5}   ; Wait for hotend temp (within -1 / +5 degrees)
      {% else %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-1} MAXIMUM={s+5}   ; Wait for hotend temp (within -1 / +5 degrees)
      {% endif %}
    {% endif %}


# Based on Bully85(?) But added Z offset
[gcode_macro XYZ_offset_dual]
description: Set XYZ offset for dual mode
gcode:
    {% set OFFSET_X = params.X_OFFSET | default(0) | float %}
    {% set OFFSET_Y = params.Y_OFFSET | default(0) | float %}
	{% set OFFSET_Z = params.Z_OFFSET | default(0) | float %}
    
    SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_x VALUE={ OFFSET_X }
    SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_y VALUE={ OFFSET_Y }
	SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_z VALUE={ OFFSET_Z }

    SAVE_VARIABLE VARIABLE=dual_x_offset VALUE={OFFSET_X}
    SAVE_VARIABLE VARIABLE=dual_y_offset VALUE={OFFSET_Y}
    SAVE_VARIABLE VARIABLE=dual_z_offset VALUE={OFFSET_Z}

    M117 {OFFSET_X}
    M117 {OFFSET_Y}
    M117 {OFFSET_Z}



# T0 print cooling fan
[fan_generic fanX1]
pin: PB14
cycle_time: 0.0100
kick_start_time: 1.00
hardware_pwm: false

# T1 print  cooling fan
[fan_generic fanX2]
pin: PB12
cycle_time: 0.0100
kick_start_time: 1.000
hardware_pwm: false

[gcode_macro DC_VARS]
# Print cooling fans names
variable_fan0: 'fanX1'
variable_fan1: 'fanX2'
gcode:

[gcode_macro M106]
description: Override "M106" to allow multiple extruders.
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set raw_speed = params.S|default(0)|float %}
    {% set fan_speed = (raw_speed / 255.0)|round(2) %}
    {% if (params.P) is defined %}
        {% set P_fan = dcvars.fan0 if (params.P)|int == 0 else dcvars.fan1 %}
        SET_FAN_SPEED FAN={P_fan} SPEED={fan_speed}
    {% elif printer.dual_carriage is defined %}
        _SET_PRINT_FANS_SPEED SPEED={fan_speed}
    {% endif %}
    
[gcode_macro M107]
description: Override "M107" to allow multiple extruders.
gcode:
    M106 S0
    
[gcode_macro _SET_PRINT_FANS_SPEED]
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if params.SPEED is defined %}
        {% set fan_speed = params.SPEED|float %}
    {% else %}
        # read print fan speed from active extruder
        {% set fan0_speed = printer["fan_generic " + dcvars.fan0].speed|float %}
        {% set fan1_speed = printer["fan_generic " + dcvars.fan1].speed|float %}
        {% set fan_speed = [fan0_speed, fan1_speed]|max %}
    {% endif %}
    {% if printer.dual_carriage.carriage_1 == "MIRROR" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% elif printer.dual_carriage.carriage_1 == "COPY" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% elif printer.dual_carriage.carriage_1 == "INACTIVE" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED=0
    {% elif printer.dual_carriage.carriage_0 == "INACTIVE" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED=0
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% endif %}

