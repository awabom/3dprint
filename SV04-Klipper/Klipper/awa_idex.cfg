[gcode_macro T0]
description: Activates Left Extruder
gcode:
  {% if printer.dual_carriage.carriage_0 != "PRIMARY" %} # T0 is not active, switch!
    SWITCH_TOOL
  {% endif %}

[gcode_macro T1]
description: Activates Right Extruder
gcode:
  {% if printer.dual_carriage.carriage_1 != "PRIMARY" %} # T1 is not active, switch!
    SWITCH_TOOL
  {% endif %}

[gcode_macro SWITCH_TOOL]
description: Switch tool (and try to be efficient)
gcode:
    {% set T1_OFFSET_X = printer.save_variables.variables.dual_x_offset %}
    {% set T1_OFFSET_Y = printer.save_variables.variables.dual_y_offset %}
    {% set T1_OFFSET_Z = printer.save_variables.variables.dual_z_offset %}
    {% set FEEDRATE_X = 12000 %}
    {% set FEEDRATE_Z = 720 %}
    {% set T0_PARK_X = printer.configfile.config.stepper_x.position_endstop|float %}
    {% set T1_PARK_X = printer.configfile.config.dual_carriage.position_max|float %}

    # Determine which head to park
    {% if printer.dual_carriage.carriage_1 == "PRIMARY" %} # T1 is active
      {% set park_tool = 1 %}
    {% else %}
      {% set park_tool = 0 %}
    {% endif %}

    # Z-hop upwards (Rely on slicer to move it down again)
    G91
    G1 Z1 F{FEEDRATE_Z}
    G90

    # Get target and toolhead positions
    {% set TARGET_GCODE_X = printer.gcode_move.gcode_position.x|float %}
    SET_GCODE_OFFSET X=0 Y=0 Z=0
    
    {% if park_tool == 0 %}
      {% set T0_X = printer.toolhead.position.x|float %}
      {% set T1_X = T1_PARK_X %}

      {% set T0_GO_LEFT = (T0_X - T0_PARK_X|float) %}
      {% set T1_GO_LEFT = (T1_X - (TARGET_GCODE_X+T1_OFFSET_X)) %}

      M118 Park T0 - {T0_X} {T1_X} {T0_GO_LEFT} {T1_GO_LEFT}

      # Left needs to go further? Then move it a bit first
      {% if T0_GO_LEFT > T1_GO_LEFT %}
        G91
        G1 X-{T0_GO_LEFT - T1_GO_LEFT} F{FEEDRATE_X}
        G90
      {% endif %}

      # Make T0 go to left bucket (T1 follows the same distance)
      SET_DUAL_CARRIAGE MODE=COPY CARRIAGE=1
      G1 X{T0_PARK_X} F{FEEDRATE_X}
      
      # Activate T1
      SET_DUAL_CARRIAGE CARRIAGE=1
      ACTIVATE_EXTRUDER EXTRUDER=extruder1
      SET_GCODE_OFFSET X={T1_OFFSET_X} Y={T1_OFFSET_Y} Z={T1_OFFSET_Z}
        
    {% elif printer.dual_carriage.carriage_1 == "PRIMARY" %} # T1 is active
      {% set T0_X = T0_PARK_X %}
      {% set T1_X = printer.toolhead.position.x|float %}

      {% set T0_GO_RIGHT = (TARGET_GCODE_X - T0_PARK_X) %}
      {% set T1_GO_RIGHT = (T1_PARK_X - T1_X) %}

      M118 Park T1 - {T0_X} {T1_X} {T0_GO_RIGHT} {T1_GO_RIGHT}

      # Right needs to go further? Then move it a bit first
      {% if T1_GO_RIGHT > T0_GO_RIGHT %}
        G91
        G1 X{T1_GO_RIGHT - T0_GO_RIGHT} F{FEEDRATE_X}
        G90
      {% endif %}

      # Make T1 go to right bucket (T0 follows the same distance)
      SET_DUAL_CARRIAGE MODE=COPY CARRIAGE=1
      G91
      G1 X{[T0_GO_RIGHT, T1_GO_RIGHT]|min} F{FEEDRATE_X}
      G90

      # Activate T1 and make sure it's at the exact parking position
      SET_DUAL_CARRIAGE CARRIAGE=1
      G1 X{T1_PARK_X} F{FEEDRATE_X}
      
      # Activate T0
      SET_DUAL_CARRIAGE CARRIAGE=0
      ACTIVATE_EXTRUDER EXTRUDER=extruder
      SET_GCODE_OFFSET X=0 Y=0 Z=0
    {% endif %}

[gcode_macro M104.1]
description: Pre-heating (used by PrusaSlicer for the Prusa XL)
gcode:
    {% set preSeconds = params.P|default(0)|float %}
    {% set temp = params.S|default(0)|float %}
    {% set tool = params.T|default(0)|int %}
    {% set degPerSecond = 2 %}
    {% set idleTemp = 85 %}

    {% if preSeconds < ((temp - printer.extruder.temperature) * degPerSecond + 20) %}
      M104 T{tool} S{temp}
    {% else %}
      M104 T{tool} S{[temp, idleTemp]|min}
    {% endif %}
    
 